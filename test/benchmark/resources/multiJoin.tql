#
# Copyright (C) 2022 Vaticle
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

define

genericEntity sub entity,
    owns index,
    plays AbstractBaseRelation:fromRole,
    plays AbstractBaseRelation:toRole;

# Abstract base relation
AbstractBaseRelation sub relation,
    relates fromRole, relates toRole;

A sub AbstractBaseRelation;
B1 sub AbstractBaseRelation;
B2 sub AbstractBaseRelation;
C1 sub AbstractBaseRelation;
C2 sub AbstractBaseRelation;
C3 sub AbstractBaseRelation;
C4 sub AbstractBaseRelation;
D1 sub AbstractBaseRelation;
D2 sub AbstractBaseRelation;

index sub attribute, value long;

# rules
rule rule-1:
when {
    (fromRole: $x, toRole: $z) isa B1;
    (fromRole: $z, toRole: $y) isa B2;
} then {
    (fromRole: $x, toRole: $y) isa A;
};

rule rule-2:
when {
    (fromRole: $x, toRole: $z) isa C1;
    (fromRole: $z, toRole: $y) isa C2;
} then {
    (fromRole: $x, toRole: $y) isa B1;
};

rule rule-3:
when {
    (fromRole: $x, toRole: $z) isa C3;
    (fromRole: $z, toRole: $y) isa C4;
} then {
    (fromRole: $x, toRole: $y) isa B2;
};

rule rule-4:
when {
    (fromRole: $x, toRole: $z) isa D1;
    (fromRole: $z, toRole: $y) isa D2;
} then {
    (fromRole: $x, toRole: $y) isa C1;
};
